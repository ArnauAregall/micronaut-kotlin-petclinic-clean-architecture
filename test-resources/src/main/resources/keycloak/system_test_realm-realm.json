{
  "id": "7abf51a7-f9c1-4423-92d7-1eb78864e4c2",
  "realm": "system_test_realm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "613755cc-339b-451f-ba5b-e367335a0bfd",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "7abf51a7-f9c1-4423-92d7-1eb78864e4c2",
        "attributes": {}
      },
      {
        "id": "4052c919-600e-4cc5-a198-906a811955f4",
        "name": "default-roles-system_test_realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "7abf51a7-f9c1-4423-92d7-1eb78864e4c2",
        "attributes": {}
      },
      {
        "id": "20d6a617-b285-440f-9d81-0121469d2fa1",
        "name": "system_test_role",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "7abf51a7-f9c1-4423-92d7-1eb78864e4c2",
        "attributes": {}
      },
      {
        "id": "30e09a79-2d4d-4bd2-a18e-975283f221e7",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "7abf51a7-f9c1-4423-92d7-1eb78864e4c2",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "e760b7a9-d01a-4425-9bf9-34eee278f65e",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "a19f1ba7-9dfb-4b7f-8a19-cb1e947f4fd9",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "2305f9cd-c3db-49e3-a2d0-8469161105c1",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "a10a9661-18f2-45b8-bfc0-4e696cfee326",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "e3ae1170-ddf5-4bd2-921c-fae9ad30b16c",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "07e02dfa-b2d5-4914-a731-19796e871840",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "f2f5ce03-6f1e-4b57-bad2-61743022f630",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "5df6f714-fc5d-413a-8965-4511bdebc05f",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "9a2456ed-ec3a-42f0-93ba-2b2aae6053ef",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "5b3c1c1c-b6f0-4eda-81b9-eeb510bb1f4b",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "6e73db5e-9bd3-4b4b-a0f5-3820f45b0c1d",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "c22fb07c-e07f-4623-9b13-278892c5212d",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "4c4475e2-af27-4e7a-ada5-ae8be393b0be",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "70a1b3b8-884e-469b-a026-18c572464533",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "d29f47ab-b3ac-478b-9a42-23dec01c6a7c",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "f4346892-1350-434a-a4dd-878249f3a4f9",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "cbc91c67-27b4-42d7-bf2b-12063204948a",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "7b61fe22-f2e5-40dd-b896-1a23c966c329",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        },
        {
          "id": "7ab09221-7820-4d51-be09-96a1cf8c4bce",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-realms",
                "view-realm",
                "manage-events",
                "query-clients",
                "view-users",
                "view-identity-providers",
                "query-groups",
                "manage-users",
                "view-events",
                "manage-authorization",
                "view-authorization",
                "manage-clients",
                "impersonation",
                "manage-identity-providers",
                "query-users",
                "view-clients",
                "manage-realm",
                "create-client"
              ]
            }
          },
          "clientRole": true,
          "containerId": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "26118d56-ff27-430b-9c17-07b7088e7c54",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "6a179b8a-0bea-41ec-b40a-deb6ef0823ac",
          "attributes": {}
        }
      ],
      "system-test-client": [],
      "account": [
        {
          "id": "139e298b-8019-47fe-a754-0ee2ce0093ea",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "458c5848-df6b-427d-8121-6a18af229cd4",
          "attributes": {}
        },
        {
          "id": "12625835-a7e7-4493-9e2b-b7e715ca5185",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "458c5848-df6b-427d-8121-6a18af229cd4",
          "attributes": {}
        },
        {
          "id": "6451a874-532f-4563-9011-4d3a554f768f",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "458c5848-df6b-427d-8121-6a18af229cd4",
          "attributes": {}
        },
        {
          "id": "6fe40bf1-75ec-4e53-b249-feb8a3e9a015",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "458c5848-df6b-427d-8121-6a18af229cd4",
          "attributes": {}
        },
        {
          "id": "2b2797ca-cbbf-4975-a1aa-45ba9ea88d25",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "458c5848-df6b-427d-8121-6a18af229cd4",
          "attributes": {}
        },
        {
          "id": "17e90c00-7768-4ec8-bb03-9587487f12de",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "458c5848-df6b-427d-8121-6a18af229cd4",
          "attributes": {}
        },
        {
          "id": "27b57da4-6013-4ef0-ab11-0269ad887892",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "458c5848-df6b-427d-8121-6a18af229cd4",
          "attributes": {}
        },
        {
          "id": "12114b12-aa2e-436b-83fc-cb56fc70ff54",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "458c5848-df6b-427d-8121-6a18af229cd4",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "db3e0378-7668-4534-be9b-a1ae4d529473",
      "name": "system_test_group",
      "path": "/system_test_group",
      "realmRoles": [
        "system_test_role"
      ]
    }
  ],
  "defaultRole": {
    "id": "4052c919-600e-4cc5-a198-906a811955f4",
    "name": "default-roles-system_test_realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "7abf51a7-f9c1-4423-92d7-1eb78864e4c2"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "458c5848-df6b-427d-8121-6a18af229cd4",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/system_test_realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/system_test_realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7947895e-43c3-4817-bf2a-b29118a04076",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/system_test_realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/system_test_realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "664a71ad-5c4e-4dd4-b407-93654dbfbc66",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bbc33acb-9949-499d-9966-b5d405c1af76",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6a179b8a-0bea-41ec-b40a-deb6ef0823ac",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d30562af-d1cc-46da-86a2-58484ad7b7a9",
      "clientId": "system-test-client",
      "name": "",
      "description": "system-test-client OpenID Connect client for system_test realm",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "system-test-client-secret",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1701603344",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3bc32b01-2b12-4669-bc6a-37a5d3a1e4c9",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4920a33a-f60e-4bcf-aa28-620622daff22",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/system_test_realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/system_test_realm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "8b86a924-6561-4e9c-863e-d3fdff6ba85d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "8a95b02a-0a36-4c64-baf7-3f4d7412bd72",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "82589c11-2488-4403-a8d5-7755513a56e7",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "826edb1e-902d-4441-8017-5237e917ccbe",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "835fbcdb-dbde-41a1-8886-7328fd4b45c9",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0a2ed22c-8539-4a92-b92c-a81dd656690d",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "a2488ffd-c24e-4998-9056-55649444a82b",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "81ca5f6e-5372-4ab2-9c74-bebea95f6956",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "c20a319c-0d05-4044-ac5f-302b2ba9f84a",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "3d935d4a-ba8d-4df8-92a7-5f127ad4dbbc",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ec56db21-981e-4e09-9cea-3c868ee17432",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "458a2ea4-89f0-4d94-b453-b469c513720a",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5aeb0938-b20a-497e-8c4b-e71f812addb5",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "8f9d04b6-ba8b-43de-b5e0-0d130796a1f9",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4f396bc2-8a6f-4960-8927-ac37ccee83a3",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "705602de-f829-4e78-a254-55a08ac9ee29",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "702360e2-0118-4a37-be6f-10bebb2ec678",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1669ffbe-6250-47b5-9ace-6ac5a9850b70",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6b663d9f-e204-4fdf-b2c8-950e2e63e6d6",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "02f45d75-9257-49b5-b23a-3fb6bbefd1b1",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6bdeb9d2-f10a-481f-adf6-b62842f94b7f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "df851fa9-ffa9-4c39-bbc6-544df1b19080",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "620d9b58-09b6-4167-a4ea-09eb51af908a",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b8b46094-7271-4299-9ccd-7588b1ce8e50",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1f40ba83-5619-41e8-bd41-d90695befa26",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "99c05c23-fa91-4b3f-8688-e3b9a1f46c02",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "61624b29-a444-4e99-8ad0-9b277e95cc47",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b7e93b4a-e41e-417e-b8ad-5130b15f7d99",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b61c6ba8-d35d-43b2-bada-e27ff78d0ece",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "bbe7ab28-81f5-4174-b366-9c3d5b89086f",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "fac7eb0e-73de-462c-960e-7ad42ac25bfb",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "3f7e6b2f-4261-406b-8477-2888beb29f30",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "d4aa0774-a3d7-437d-aa5a-73205b548c7c",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b5f91c4d-9947-46d7-9b58-bd159b40ce36",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "1b500a3d-f450-4cc9-ab41-ebaa0563ccb9",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "2f5b1bdc-8e3c-42fa-9ba7-678d94dc877f",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "dd6aa7b8-9c2a-4861-879d-60f3036ca209",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7d3ba31e-f393-4bd8-87ed-97c229d9272c",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "0dc4557f-195d-46c0-a57a-d648dc98966e",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "d201ee8e-23cc-4fec-ac66-950b2d53f4f5",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "77087297-6dfd-4bc6-be33-73547036be1b",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "2db2f18e-c02a-49ae-860b-74546ba2a5ef",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "bc270b4e-b5d1-4a5e-866e-9bc9afd372e8",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "e471e7f6-b8e7-4d94-8135-064c503aa271",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "adf753e1-799b-432e-a245-20e80e2d858e",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "3db540ff-5ee3-4019-9971-33354067acef",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "6751d6fc-2765-45ad-93b1-77852eb77d97",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAuh8mpw9+gkWvNBNuMd+0gW+MFqOaCo1xEO1ut+iXiv/Enhg8qRowVIY2BJzu3s0WaT7lZxCDTMp9A8ZsQwfsBAx+7AOcwXrzJgErKl56kD4k+PwwvHVvBSobw2uwOcYqZClee4BiyePOpwPzGlYbDSyGzDBhCZPFiYZqVxPOzEhG8zWXEPsVqfdSdkF6F9+JOnBnjYFGCc46/dRD2RRmyRtpCbZGzGg600mZfzC0SQQpi/A8BWtzdCWNiaLAl/5w3RSOs79pfWHi/r2y89xNtvsL9dFj6v04x1HDtOlhm/3B6Opwck+y5NsdXLKnRIgcJWa68OLWEHQG0Nman6qSUwIDAQABAoIBABR2Gz+Pe6wiXA4LZXhp1wQfJBVTEWVql6JcRT6bp+6vNUmKHD/HnMZAu6Hgh37f/hWTmrsCEjqNd5aZfZ/AOF6uPv/UWoCHc0Fbgd2BEH6uDk4pxMkwgdmH/7sJVOYtFnj3dqcjffjNqL4suCZOOWAb49/Wdmc2oydTgHpSjPq2dmwUPm3YJEKbw40f0lCqOLBDOoMLGElGc7z0JtZp58i8tpBIZUdBcil9Chs5HYdWtqUAUnj4g3j2JCUnp1PnXGVnUrFU0Qs7fyBNh2AxTTKgPV8IbQHz/oXn2z4UdqFSD/PUjznfnovfHdGX2ku041ZPIyEvv5/1JlsMN/9thn0CgYEA9tbVo5Q+JtzrzmZMD54JAt7rlTDpH9yf80yXDUCtwQ4wwGerglj3M75HNp92slvq2ZSEVTv6PDMK6WZUD4TYnTUNQqnREI1vACZRp5wINUEgrUzmye0Fi6yQz3pbaJywd6B7zZAQanJiPzIHiOhtrj0IVJeX6sk3MH2mS5EfZZ0CgYEAwQdz3EUj5mUN/1ZvM/cAxvjzbxsnKhPnQfOOmaG2pt42KKjmsE4VdBuFsLVpjINmtn3Tx4U6UMFPbPbk3HN3rmFQCG2mgz3yAj6qOXAGdCuWijM+HIcqy5mly+6fN0Ald5n9JWBXxep0+GlGbn5WYbCLHl4qMfSRva0/ON+3zK8CgYBxpNV1W4IF6H6UZ1qrcgoaDUIPTRZ3ud7WaDO/QUD9+ieN3e0DtSwS4Y7t4hsG4PTOOed3SobaAnIKpTcccgA82LkDMSX05fjt67Z6YYcR5atCvn4fB4YfGVMOgvnkvwcr/HIjYSl9qK39BG6dpM0ihCz6rVSfHwbOx3qxnd4DrQKBgQCFkMaW0DC7J4m7+O8RogSjqXeolb1P3F3UwNcXb1KXvIL1N4oIzL8DjFfBooXaeMIF3KNCF+n2Hwz6dQx/jlZuD1/1tQnXHnHrI7ld7SpKEC8mibacvtrZ7wNOTVtWO8ixLZiA2F1j0YwGp7HYmwripepdpQLFdlmyScLJc+QWeQKBgDw7MtpN2kU/Xg8p+LCGGBGFfwbCM0XP+wVQWRCmycBNJIngqCCM0YCXW0PNVJdhHv3w1wnnnN7+eimcj0nEi2F5eR+7aFIe6wu/PENsM/N0+pHIIfj15hyNqRffCHiPorgjJvWs2DJNxc01pqBEwO2U82Ezn9kKiHlR6I/NG3Wv"
          ],
          "certificate": [
            "MIICsTCCAZkCBgGML7eKHDANBgkqhkiG9w0BAQsFADAcMRowGAYDVQQDDBFzeXN0ZW1fdGVzdF9yZWFsbTAeFw0yMzEyMDMxMjQ1MDZaFw0zMzEyMDMxMjQ2NDZaMBwxGjAYBgNVBAMMEXN5c3RlbV90ZXN0X3JlYWxtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuh8mpw9+gkWvNBNuMd+0gW+MFqOaCo1xEO1ut+iXiv/Enhg8qRowVIY2BJzu3s0WaT7lZxCDTMp9A8ZsQwfsBAx+7AOcwXrzJgErKl56kD4k+PwwvHVvBSobw2uwOcYqZClee4BiyePOpwPzGlYbDSyGzDBhCZPFiYZqVxPOzEhG8zWXEPsVqfdSdkF6F9+JOnBnjYFGCc46/dRD2RRmyRtpCbZGzGg600mZfzC0SQQpi/A8BWtzdCWNiaLAl/5w3RSOs79pfWHi/r2y89xNtvsL9dFj6v04x1HDtOlhm/3B6Opwck+y5NsdXLKnRIgcJWa68OLWEHQG0Nman6qSUwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBYuelRa5/UitHqm/Ht7dR7ilXovg527zCYYFSGLEEZbEA6+S5VVmVfPNQMXE6d7IfFnLjZcfDMF7uFEggBml5XOrEyy5WBDjDVSv9WYHjtWOiYGZsHQPoMvwhM2PGqrQy8/boAS+M13CaTvRYqqkOfKh8kKGnS30X7xYJkGLfdQQYLiblYb9REZLem2Y1NOCEbXTPIVVPZyiy0Bx+HhCl1mPKZyypdQfv1RxVwSS+XmxFaDvn7kBmraYp1x1cxf7Qb7tYwyw/T+Mu0WNcoVrskndyFi6O7O1ApuPpdvLwaYZpAxpmkgp4IbsbxgAIYFwFJXM8zrA+V8NCCha0hFiNS"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "cdc2133e-38fb-4762-a7b4-597041000fa3",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAr3YyMzP4Q/Qc3F++tPgS6Wk2oqcBe8Hi7a5WVWer9DTd1bamnjEgSVI8VuEGu/t0GjB0CPJuXXwQ2GF/VD0kS5edywo8YcA/Tf9V5T94afCP0EGMv4qATTQOgeppl63OEByYrO0D8q1PN3NkdV7eB2NJdMypUy7OkHsv/mjqwuzQqC4NNBhUbw/V4tX5DtFJSGEkFPQZ0KgnP8FNF3Jypo4qlop99RZeP0Ghgv00W7lY+LqOG49VBF95DTbI/40j5tIU+9Gm8X8F1w+jOF+beK9wCTGveKgKT0vwGWXLh0FsiKXW0uI6hoBcWsR/5zu6RMwaO2b6IHjNQkUcWDEYVQIDAQABAoIBAFbxQGqyw8AYQ/zGzJ6rleNmqRXrnwaNyj5v9oOXPVNiptFxEhqsyQzL3O5HzqhzLtKTU8vjJODZyxcNKKS7LzLty9iCF+1v725cqVlRG/+SnhBZir6WiIC43L9vQidQjhzZrqVxRFWJnwkg+pRWD7qlbg6cIwL+3IgnIl7z6e/vyEJRRKYJDS+T6Q2OPo7JYXi90UgBOpB+z5MYOA5KWkov5HWDijUGxmWxp/cu/qM7jaLWtRQPinPf05ut3FuD70BJSf2V0fF1LalYb2x9hu+qT55Wc5JFRm51HCJ+1S6SX+/4mwqZ0Fy6rBzf6HK5plqlajwmSgQ6/g86efL0YbkCgYEA9FS9a0DY9b1XC5yzZX530RN/joG2hBvdRF1oqO0RhKlSagTxu4Bxqw4TzmkWxd3WspowE51rAO0uO2k1qfN0QGeXPUlleMEKh3eFGAPMomGbx+XZuR6nbZgpa7oJCn3bpNRmeUxOFmO2LJxvd3wxF/rA3esf/Yp1E6+Qkra9qzMCgYEAt9dwxFOZRsF6ypv5JCpreQqNyQ3WJv8OtoirEzRnIxYch4/Yvfk3POyYMBXLFAWiEEkIY9ygG14TflmfVmBuAXegTCw0RrpCxe7bh66ha2tKl8BolLRGQ0pFY0glfsJbfxC2qYKxgaiDQyfTS8iBHEGYSonSG8yrPcHfzqkkblcCgYEAqQuELpOkSIliky8s07jnbyldZJyMSeT5dxZllhLHvxBja+TV1xOsEVxhCbudvPKaW+HgB4IviWmQRhypu1cshG7nrch9Q0nUXhusYwwl5edAn9KAi9sQnfvcFKOXI8ImWGl4KM5JbKY6Ya0uVe4ADYY5MJFABexoymD61vdGTQ8CgYB8FsNbAUKYa8hCMf1819UrImCJsPk34TlBJAa1M83Z9PbU2ddmg20xhlFDQ7KLlTHK5EDxht3bGyj1Q/E1EGmwO9rLD5tJkje3+n3bm5gBNa5nt8vfc79pdBxZ4zzLzsyLe/CPglPmPKQ9FAifQntDY1M0HMrhUMjVKqOyjqC0iQKBgQCx5VV3ZZl3AXIzjq3jWDqL6FHeeipM00fOeOMN1JbSGh05p2XH2ut/U0+0Fd+ZmjetXcc3N3Cvak+9ahuTX6cXe776XD/U+Kj5HIslBv3LI+eOZXsRVIF8CI63AqO1W+Zt1Znhvtm3euns65FU1imVM2CmUzLS2lmrMu1MCgU5Xg=="
          ],
          "certificate": [
            "MIICsTCCAZkCBgGML7eKyzANBgkqhkiG9w0BAQsFADAcMRowGAYDVQQDDBFzeXN0ZW1fdGVzdF9yZWFsbTAeFw0yMzEyMDMxMjQ1MDZaFw0zMzEyMDMxMjQ2NDZaMBwxGjAYBgNVBAMMEXN5c3RlbV90ZXN0X3JlYWxtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr3YyMzP4Q/Qc3F++tPgS6Wk2oqcBe8Hi7a5WVWer9DTd1bamnjEgSVI8VuEGu/t0GjB0CPJuXXwQ2GF/VD0kS5edywo8YcA/Tf9V5T94afCP0EGMv4qATTQOgeppl63OEByYrO0D8q1PN3NkdV7eB2NJdMypUy7OkHsv/mjqwuzQqC4NNBhUbw/V4tX5DtFJSGEkFPQZ0KgnP8FNF3Jypo4qlop99RZeP0Ghgv00W7lY+LqOG49VBF95DTbI/40j5tIU+9Gm8X8F1w+jOF+beK9wCTGveKgKT0vwGWXLh0FsiKXW0uI6hoBcWsR/5zu6RMwaO2b6IHjNQkUcWDEYVQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCrkxSDl2Ij8ZqTm/2XwVSqbFq7Jqaws0ERtgLf8++jS4tv6ioLY4eZiGfYgMDVKPyhWuxdDfLlmjRzXw2zMmNCwJNkFUpv6jQtzjoky5lYjYAPgoIg6mBmHgW3UlLZDggcSSFswgx1CvERwgQdjVLNgjAE7rPXYyqvTYReJMjqqoTr9eW9TfSp4m9idWRizbpSwjjgIsVsUPtN20qubgRcwbEGTKcB+jVDXbUyer20X4gr+yg+jzuPK0aDpnHeYzDyd4AvPKL9U7P00ZE/YrpRtGmMwmyNHdihVq/xTVRwV/xPG9msx5zclSqKN88AbYWb6H4Y846yKbC9ihyS0grm"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "bddb55b4-ef43-4c1c-8f85-6012c1f0b915",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "377d6dfc-caee-441d-b0b4-944389ba0cf8"
          ],
          "secret": [
            "_eOSsl2Ry4BtbK1DvjKNFw"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "fc97ea83-555c-4f91-b29e-8f30fcebd9b6",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "ff71107e-9294-4a87-b014-642c02972d14"
          ],
          "secret": [
            "zvcV34U6K52-QkwqWeeOA7ygOmZESBOGphhW4mlhufAMOlLmBI54Zju3DBYw32XCa1CoOy3YwWfNGHgqmFixYw"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "a80a1485-40ec-41b6-847b-52c731f60db6",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "42c61895-f479-4a67-9e86-d3ffb0ac7329",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "18b6cbe2-0abc-422b-91c4-928daf8d593d",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f250da9a-6237-43df-b23e-1df5a805a1c3",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "776a0aaf-c675-4b03-b9f2-5c99763b586e",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6f53da3f-ad13-4045-b63d-9a9225e11d94",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cdfca9f7-a280-4b93-830f-e3b9f50b571b",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3d9a2510-bb84-4e62-82ae-33a50cb7919d",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e5336eea-55eb-405a-a185-35223a66d804",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "96e79ac3-8d15-45f4-8358-6249faf07cea",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8262f6ae-e9f2-4879-86ab-3bf832a02eef",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "270bad71-54f6-4dbd-ab5e-6748a128e11d",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1d701a44-7950-4ed6-bea5-f860adfb4ea3",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "491b91ed-d175-42a1-bfdf-d28806f7c31d",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0a9627c6-a172-4c2e-8279-493aa47cc24d",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "87902261-58c4-405e-8fa5-1c2f4f85fc99",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "af3d0cf2-1141-40cb-88ee-8fd08e760871",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "44a68512-3d86-4f3a-a3b3-0602336df162",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "5e0736cd-6093-4533-bfc8-fb94bda34766",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "a9b8d414-a235-4b61-8c1e-1c5e8dc3ac37",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "23.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  },
  "users": [
    {
      "id": "b40af7e9-392d-40e9-9eb7-55993c9d2a8e",
      "createdTimestamp": 1701607617550,
      "username": "system_test_user",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "credentials": [
        {
          "id": "5cbfef41-dd53-4acc-b607-846890bd5d4c",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1701607623269,
          "secretData": "{\"value\":\"Bsu+2Rnp6HfvM26x7HbHmoUFrR68aBPB7QZEIf+uOLY=\",\"salt\":\"LmGkeeMAyUQc2DeCEZ/bqw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-system_test_realm",
        "system_test_role"
      ],
      "notBefore": 0,
      "groups": []
    }
  ]
}