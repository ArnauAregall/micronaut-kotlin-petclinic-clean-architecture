version: '3.4'
services:

  zookeeper:
    image: 'zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    hostname: kafka
    ports:
      - '9092:9092'
      - '29092:9092'
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  akhq:
    image: 'tchiotludo/akhq:latest'
    depends_on:
      - kafka
    ports:
      - '8081:8080'
    restart: unless-stopped
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: "kafka:29092"

  keycloak:
    image: 'quay.io/keycloak/keycloak:latest'
    depends_on:
      - postgres
    command: ['start-dev', '--import-realm', '--health-enabled=true']
    hostname: keycloak
    networks:
      default:
        aliases:
          - keycloak.local
    ports:
      - '8082:8082'
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HTTP_PORT: 8082
      KC_HOSTNAME_URL: http://keycloak.local:8082/
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8082;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  identity-service:
    profiles:
      - petclinic
    image: 'tech.aaregall.lab.petclinic/identity-service:latest'
    ports:
      - '8080:8080'
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_started
      keycloak:
        condition: service_healthy
    restart: always
    environment:
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/postgres
      DATASOURCES_DEFAULT_USERNAME: ${POSTGRES_USERNAME}
      DATASOURCES_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MICRONAUT_SECURITY_OAUTH2_CLIENTS_KEYCLOAK_OPENID_ISSUER: http://keycloak.local:8082/realms/petclinic
      OAUTH2_CLIENT_SECRET: ${IDENTITY_SERVICE_OAUTH2_CLIENT_SECRET}

  pet-service:
    profiles:
      - petclinic
    image: 'tech.aaregall.lab.petclinic/pet-service:latest'
    ports:
      - '8083:8080'
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_started
      keycloak:
        condition: service_healthy
    restart: always
    environment:
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/postgres
      DATASOURCES_DEFAULT_USERNAME: ${POSTGRES_USERNAME}
      DATASOURCES_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      R2DBC_DATASOURCES_DEFAULT_URL: r2dbc:postgresql://postgres:5432/postgres
      R2DBC_DATASOURCES_DEFAULT_USERNAME: ${POSTGRES_USERNAME}
      R2DBC_DATASOURCES_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REDIS_URI: redis://redis:6379
      MICRONAUT_HTTP_SERVICES_IDENTITY-SERVICE_URL: http://identity-service:8080
      MICRONAUT_SECURITY_OAUTH2_CLIENTS_KEYCLOAK_OPENID_ISSUER: http://keycloak.local:8082/realms/petclinic
      OAUTH2_CLIENT_SECRET: ${PET_SERVICE_OAUTH2_CLIENT_SECRET}

  vet-service:
    profiles:
      - petclinic
    image: 'tech.aaregall.lab.petclinic/vet-service:latest'
    ports:
      - '8084:8080'
    depends_on:
      postgres:
        condition: service_started
    environment:
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/postgres
      DATASOURCES_DEFAULT_USERNAME: ${POSTGRES_USERNAME}
      DATASOURCES_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}

volumes:
  postgres_data:
  redis_data: